on: pull_request
name: Review
jobs:
    test-composer-install:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4', '7.3']
        name: Validate composer (${{ matrix.php}})
        steps:
            - uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.php}}
                extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: ${{ matrix.php }}-composer-

            - name: Validate composer files
              run: composer validate composer.json

            - name: Composer install with exported .env variables
              run: |
                  set -a && source .env && set +a
                  APP_ENV=prod composer install --no-dev -o

    unit_tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4', '7.3']
        name: Unit tests (${{ matrix.php}})
        steps:
            - uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

            - name: Unit tests
              run: phpdbg -qrr ./vendor/bin/phpunit --coverage-clover=coverage/unit.xml

    behaviour_tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4', '7.3']
        name: Behaviour tests (${{ matrix.php}})
        services:
            elasticsearch:
                image: elasticsearch:6.8.4
                ports:
                    - 9200:9200
                options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
        steps:
            # â€”â€” Check Elasticsearch ðŸ”Ž â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            - name: Check the Elasticsearch connection from runner host
              run: |
                  curl -fsSL "http://localhost:9200"
                  curl -fsSL "http://localhost:9200/_cluster/health?pretty"

            - name: Checkout
              uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

            - name: Setup tmate session
              uses: mxschmitt/action-tmate@v2

            - name: Behaviour tests
              run: |
                  APP_ENV=test ELASTIC_URL=http://localhost:9200 bin/console fos:elastica:create
                  ELASTIC_URL=http://localhost:9200 phpdbg -d memory_limit=-1 -qrr ./vendor/bin/behat

    runner-phpcs:
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            php: ['7.4', '7.3']
        name: Coding style (${{ matrix.php }})
        steps:
            - uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none

            - name: Install Reviewdog
              run: wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $PWD/ v0.9.14

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

            - name: PHPCS
              run: composer actions/phpcs | ./reviewdog -f=checkstyle -name=PHPCS -reporter=github-pr-check
              env:
                  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    phpcsfixer:
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            php: ['7.4', '7.3']
        name: Coding style fixer (${{ matrix.php }})
        steps:
            - uses: actions/checkout@master

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

            - name: phpcsfixerr
              run: composer actions/phpcsfixer

    helm:
        name: Helm
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1

            - uses: azure/setup-helm@v1
              name: Install helm
              with:
                  version: v3.1.2

            - name: Lint helm (CoverService)
              run: helm lint infrastructure/cover-service  --set hpa.enabled=true --set ingress.enableTLS=true --set ingress.mail=test@itkdev.dk --set ingress.domain=cover.dandigbib.org

            - name: Lint helm (Shared config)
              run: helm lint infrastructure/shared-config

#   @TODO: Add in future release.
#    phan:
#        name: PHAN
#        runs-on: ubuntu-latest
#        steps:
#            - uses: actions/checkout@master
#            - name: Setup PHP, with composer and extensions
#              uses: shivammathur/setup-php@master
#              with:
#                  php-version: 7.3
#                  extension-csv: ctype, iconv, imagick, json, redis, soap, xmlreader, zip
#                  coverage: none
#            - name: Install Dependencies
#              run: |
#                  composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
#            - name: PHAN
#              run: |
#                  composer actions/phan
